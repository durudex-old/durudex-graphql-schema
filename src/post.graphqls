# Copyright Â© 2022 Durudex

# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

"""
Post type.
"""
type Post implements Node {
  """
  Post id.
  """
  id: ID!

  """
  Post author.
  """
  author: User!

  """
  Post text.
  """
  text: String!

  """
  Post updated date.
  """
  updatedAt: Timestamp

  """
  Post attachments.
  """
  attachments: [String!]
}

"""
List of post owned by the subject.
"""
type PostConnection {
  """
  A list of nodes.
  """
  nodes: [Post]

  """
  A list of edges.
  """
  edges: [PostEdge]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}

"""
An edge in a post connection.
"""
type PostEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Post
}

extend type Query {
  """
  Getting user post.
  """
  post(id: ID!): Post
}

extend type Mutation {
  """
  Create a new user post.
  """
  createPost(input: CreatePostInput!): ID! @isAuth

  """
  Delete user post.
  """
  deletePost(id: ID!): Boolean! @isAuth

  """
  Update user post.
  """
  updatePost(input: UpdatePostInput!): Boolean! @isAuth
}

"""
Create post input.
"""
input CreatePostInput {
  """
  Post text.
  """
  text: String!

  """
  Post attachments.
  """
  attachments: [UploadFile!]
}

"""
Update post input.
"""
input UpdatePostInput {
  """
  Post id.
  """
  id: ID!

  """
  Post text.
  """
  text: String!
}
